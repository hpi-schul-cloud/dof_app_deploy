  - name: Add or Update Service
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      template: svc.yml.j2
    when: WITH_MONGO_DATABASES

  - name: remove Service
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      state: absent
      api_version: v1
      kind: Service
      name: mongo-svc
    when: not WITH_MONGO_DATABASES

  - name: Add or Update ServiceMonitor
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      template: svc-monitor.yml.j2
    when: WITH_MONGO_DATABASES

  - name: remove ServiceMonitor
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      state: absent
      api_version: monitoring.coreos.com/v1
      kind: ServiceMonitor
      name: mongo-svc-monitor
    when: not WITH_MONGO_DATABASES
   
  - name: Add or Update Secret by 1Password
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      template: onepassword.yml.j2
    when: WITH_MONGO_DATABASES and ONEPASSWORD_OPERATOR is defined and ONEPASSWORD_OPERATOR|bool

  - name: remove Secret by 1Password
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      state: absent
      api_version: onepassword.com/v1
      kind: OnePasswordItem
      name: mongo-secret
    when: not WITH_MONGO_DATABASES and ONEPASSWORD_OPERATOR is defined and ONEPASSWORD_OPERATOR|bool

  - name: Add or Update Persistent Volumes Claim
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config 
      namespace: "{{ NAMESPACE }}"
      template: pvc.yml.j2
    when: WITH_MONGO_DATABASES

  - name: remove Persistent Volumes Claim
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config 
      namespace: "{{ NAMESPACE }}"
      state: absent
      api_version: v1
      kind: PersistentVolumeClaim
      name: mongo-pvc
    when: not WITH_MONGO_DATABASES

  - name: Add or Update Deployment
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      template: deployment.yml.j2
      apply: yes
    when: WITH_MONGO_DATABASES

  - name: remove Deployment
    kubernetes.core.k8s:
      kubeconfig: ~/.kube/config
      namespace: "{{ NAMESPACE }}"
      state: absent
      api_version: apps/v1
      kind: Deployment
      name: mongo-deployment
    when: not WITH_MONGO_DATABASES
