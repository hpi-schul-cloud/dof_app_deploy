#jinja2: trim_blocks: "True", lstrip_blocks: "True"
{% if group_ingress is defined %}
  {% set ingress_cfg = default_ingress| combine(group_ingress, recursive=True, list_merge='append_rp') %}
{% else %}
  {% set ingress_cfg = default_ingress %}
{% endif %}
{% if host_ingress is defined %}
  {% set ingress_cfg = ingress_cfg| combine(host_ingress, recursive=True, list_merge='append_rp') %}
{% endif %}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ NAMESPACE }}-ingress
  namespace: {{ NAMESPACE }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "{{ TLS_ENABELD|default("false") }}"
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ INGRESS_MAX_BODY_SIZE|default("2560") }}m"
    nginx.org/client-max-body-size: "{{ INGRESS_MAX_BODY_SIZE|default("2560") }}m"
    # The following properties added with BC-3606.
    # The header size of the request is too big. For e.g. state and the permanent growing jwt.
    # Nginx throws away the Location header, resulting in the 502 Bad Gateway.
    nginx.ingress.kubernetes.io/client-header-buffer-size: 100k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $forwarded_client_ip "";
      if ($http_x_forwarded_for ~ "^([^,]+)") {
        set $forwarded_client_ip $1;
      }
      set $client_ip $remote_addr;
      if ($forwarded_client_ip != "") {
        set $client_ip $forwarded_client_ip;
      }
    nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
    nginx.ingress.kubernetes.io/http2-max-header-size: 96k
    nginx.ingress.kubernetes.io/large-client-header-buffers: 4 100k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 96k
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 100k;
      large_client_header_buffers 4 100k;
{% if CLUSTER_ISSUER is defined %}
    cert-manager.io/cluster-issuer: {{ CLUSTER_ISSUER }}
{% endif %}

spec:
{% if CLUSTER_ISSUER is defined or (TLS_ENABELD is defined and TLS_ENABELD|bool) %}
  tls:
  - hosts:
      - {{ DOMAIN }}
{% if CLUSTER_ISSUER is defined %}
    secretName: {{ DOMAIN }}-tls
{% endif %}
{% endif %}
  rules:
  - host: {{ DOMAIN }}
    http:
      paths:
{% for iname, idata in ingress_cfg.items() %}
  {% if idata.path is defined and idata.serviceName is defined and idata.servicePort is defined %}
      - path: {{ idata.path }}
        backend:
          service:
            name: {{ idata.serviceName }}
            port:
              number: {{ idata.servicePort }}
    {% if idata.pathType is defined %}
        pathType: {{ idata.pathType }}
    {% else %}
        pathType: Prefix
    {% endif %}
  {% endif %}
{% endfor %}
