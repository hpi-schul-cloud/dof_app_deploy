apiVersion: apps/v1
kind: Deployment
metadata:
  name: tldraw-nginx-deployment
  namespace: {{ NAMESPACE }}
  labels:
    app: tldraw-nginx
spec:
  replicas: {{ TLDRAW_NGINX_REPLICAS|default(1, true) }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tldraw-nginx
  template:
    metadata:
      labels:
        app: tldraw-nginx
    spec:
      #securityContext:  
        #readOnlyRootFilesystem: true
        # run as user node (uid 1000)
        #runAsUser: 1000
        #runAsGroup: 1000
        #fsGroup: 1000
        #runAsNonRoot: true
      containers:
      - name: tldraw-nginx
        image: {{ TLDRAW_NGINX_IMAGE_NAME }}:{{ TLDRAW_NGINX_IMAGE_TAG }}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          name: defaultconf
        resources:
          limits:
            cpu: {{ TLDRAW_NGINX_CPU_LIMITS|default("1000m", true) }}
            memory: {{ TLDRAW_NGINX_MEMORY_LIMITS|default("1Gi", true) }}
          requests:
            cpu: {{ TLDRAW_NGINX_CPU_REQUESTS|default("100m", true) }}
            memory: {{ TLDRAW_NGINX_MEMORY_REQUESTS|default("128Mi", true) }}
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 6
      volumes:
      - name: defaultconf
        configMap:
          name: tldraw-nginx-configmap-files
          items:
          - key: default.conf
            path: default.conf
