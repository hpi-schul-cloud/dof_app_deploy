apiVersion: v1
kind: ConfigMap
metadata:
  name: enable-feature-flags-script
  namespace: {{ NAMESPACE }}
  labels:
    app: rabbitmq
data:
  enable_feature_flags.sh: |
    #!/bin/bash
    set -euo pipefail

    if [ -z "${RABBITMQ_MGMT_USERNAME:-}" ] || [ -z "${RABBITMQ_MGMT_PASSWORD:-}" ]; then
      echo "ERROR: RABBITMQ_MGMT_USERNAME and RABBITMQ_MGMT_PASSWORD must be set." >&2
      exit 1
    fi

    RABBITMQ_API="${RABBITMQ_API:-http://rabbitmq-svc}"
    RABBITMQ_PORT="${RABBITMQ_PORT:-15672}"

    get_nodes() {
      curl -sf -u "$RABBITMQ_MGMT_USERNAME:$RABBITMQ_MGMT_PASSWORD" "$RABBITMQ_API:$RABBITMQ_PORT/api/nodes" | jq -r '.[].name | sub("^.*@"; "")' || {
        echo "ERROR: Failed to fetch nodes." >&2
        exit 1
      }
    }

    get_feature_flags() {
      local node=$1
      curl -sf -u "$RABBITMQ_MGMT_USERNAME:$RABBITMQ_MGMT_PASSWORD" "http://$node:$RABBITMQ_PORT/api/feature-flags" | jq -r '.[] | "\(.name) \(.state)"' || {
        echo "ERROR: Failed to fetch feature flags for node $node." >&2
        exit 1
      }
    }

    enable_feature_flag() {
      local flag_name=$1
      local node=$2
      curl -sf -u "$RABBITMQ_MGMT_USERNAME:$RABBITMQ_MGMT_PASSWORD" -X PUT \
        -H "Content-Type: application/json" \
        "http://$node:$RABBITMQ_PORT/api/feature-flags/$flag_name/enable" || {
        echo "ERROR: Failed to enable feature flag $flag_name on node $node." >&2
        exit 1
      }
    }

    main() {
      nodes=$(get_nodes)
      if [ -z "$nodes" ]; then
        echo "ERROR: No nodes found. Exiting." >&2
        exit 1
      fi
      echo "$nodes"

      for node in $nodes; do
        feature_flags=$(get_feature_flags "$node")
        if [ -z "$feature_flags" ]; then
          echo "ERROR: No feature flags found for node $node. Exiting." >&2
          exit 1
        fi
        echo "$feature_flags"

        echo "$feature_flags" | while read -r flag state; do
          if [ "$state" != "enabled" ]; then
            enable_feature_flag "$flag" "$node"
            echo "Enabled feature flag $flag on node $node"
          else
            echo "Feature flag $flag is already enabled on node $node."
          fi
        done
      done
    }

    main