apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: rabbitmq-svc
  namespace: {{ NAMESPACE }}
spec:
  image: {{ RABBITMQ_IMAGE_NAME }}:{{ RABBITMQ_IMAGE_TAG }}
  delayStartSeconds: {{ RABBITMQ_DELAY_START_SECONDS|default(0, true) }}
  replicas: {{ RABBITMQ_REPLICAS|default("1", true) }}
  resources:
    limits:
      cpu: {{ RABBITMQ_CPU_LIMITS|default("500m", true) }}
      memory: {{ RABBITMQ_MEMORY_LIMITS|default("1Gi", true) }}
    requests:
      cpu: {{ RABBITMQ_CPU_REQUESTS|default("100m", true) }}
      memory: {{ RABBITMQ_MEMORY_REQUESTS|default("256Mi", true) }}
  persistence:
    storage: "{{ RABBITMQ_PERSISTENCE_STORAGE|default("1Gi", true) }}"
    storageClassName: {{ SC_DEFAULT_STORAGE_CLASS_NAME }}
  override:
    statefulSet:
      spec:
        template:
          spec:
            containers:
            - name: rabbitmq
              volumeMounts:
              - mountPath: /path/to/exported/
                name: rabbitmq-secret
            volumes:
            - name: rabbitmq-secret
              secret:
                secretName: rabbitmq-secret
override:
  statefulSet:
    spec:
      template:
        spec:
          containers:
          - name: rabbitmq-companion
            image: quay.io/fancy_schaum/rabbit-sidecar-test:fun
            command: ['python3', 'fun.py', '--vhost', 'zug', '--apply-config', '--config', 'rabbit_c872473fc6e9_2024-3-19.json']
  rabbitmq:
    additionalConfig: |
      load_definitions = /path/to/exported/definitions.json
      disk_free_limit.absolute = "{{ RABBITMQ_LOW_WATERMARK_DISK|default("50MB", true) }}"
      prometheus.return_per_object_metrics = {{ RABBITMQ_PER_OBJECT_METRICS|default("true", true) }}
