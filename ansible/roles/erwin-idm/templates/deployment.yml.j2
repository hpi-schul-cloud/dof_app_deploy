---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: erwinidm-deployment
  namespace: {{ NAMESPACE }}
{% if ANNOTATIONS is defined and ANNOTATIONS|bool %}
  annotations:
{% if RELOADER is defined and RELOADER|bool %}
    reloader.stakater.com/auto: "true"
{% endif %}
{% endif %}
  labels:
    app: erwinidm
    app.kubernetes.io/part-of: schulcloud-verbund
    app.kubernetes.io/version: "{{ ERWINIDM_IMAGE_TAG }}"
    app.kubernetes.io/name: erwinidm
    app.kubernetes.io/component: idm
    app.kubernetes.io/managed-by: ansible
    git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
    git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
spec:
  replicas: {{ ERWINIDM_REPLICAS|default(1, true) }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      #maxUnavailable: 1
  revisionHistoryLimit: 4
  paused: false
  selector:
    matchLabels:
      app: erwinidm
  template:
    metadata:
      labels:
        app: erwinidm
        app.kubernetes.io/part-of: schulcloud-verbund
        app.kubernetes.io/version: "{{ ERWINIDM_IMAGE_TAG }}"
        app.kubernetes.io/name: erwinidm
        app.kubernetes.io/component: idm
        app.kubernetes.io/managed-by: ansible
        git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
      annotations:
        configmapHash: ""
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: erwinidm
        image: {{ ERWINIDM_IMAGE_NAME }}:{{ ERWINIDM_IMAGE_TAG }}
        ports:
        - containerPort: {{ ERWINIDM_PORT }}
          name: erwinidm
          protocol: TCP
        - containerPort: 8090
          name: erwinidm-mgmt
          protocol: TCP
        envFrom:
        - secretRef:
            name: erwinidm-secret
        - configMapRef:
            name: erwinidm-configmap
{% if WITH_BRANCH_POSTGRES_DB_MANAGEMENT|bool %}
        - secretRef:
            name: pg-erwinidm-secret
        env:
        - name: KC_DB_PASSWORD
          value: "$(DB_USER_PASSWORD)"
        - name: KC_DB_USERNAME
          value: "$(DB_USER)"
        - name: KC_DB_URL
          value: "$(DB_BASE_URL)/$(DB_NAME)"
{% endif %}
        resources:
        # find reasonable limits
          limits:
            cpu: {{ ERWINIDM_CPU_LIMITS|default("1000m", true) }}
            memory: {{ ERWINIDM_MEMORY_LIMITS|default("1Gi", true) }}
          requests:
            cpu: {{ ERWINIDM_CPU_REQUESTS|default("100m", true) }}
            memory: {{ ERWINIDM_MEMORY_REQUESTS|default("512Mi", true) }}
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8090
          timeoutSeconds: 4
          failureThreshold: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8090
          timeoutSeconds: 4
          failureThreshold: 3
          periodSeconds: 15
        startupProbe:
          httpGet:
            path: /health/ready
            port: 8090
          timeoutSeconds: 4
          failureThreshold: 30
          periodSeconds: 10
{% if AFFINITY_ENABLE is defined and AFFINITY_ENABLE|bool %}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 9
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                  - schulcloud-verbund
              topologyKey: "kubernetes.io/hostname"
              namespaceSelector: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
{% if ANIT_AFFINITY_NODEPOOL_ENABLE is defined and ANIT_AFFINITY_NODEPOOL_ENABLE|bool %}
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - erwinidm
              topologyKey: {{ ANIT_AFFINITY_NODEPOOL_TOPOLOGY_KEY }}
{% endif %}
          - weight: 20
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - erwinidm
              topologyKey: "topology.kubernetes.io/zone"
{% endif %}
