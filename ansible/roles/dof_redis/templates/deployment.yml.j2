#jinja2: trim_blocks: "True", lstrip_blocks: "True"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: {{ NAMESPACE }}
  labels:
    app: redis
    app.kubernetes.io/part-of: schulcloud-verbund
    app.kubernetes.io/version: "{{ REDIS_IMAGE_TAG }}"
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: ansible
    git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
    git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
spec:
  replicas: {{ REDIS_REPLICAS|default(1, true) }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        app.kubernetes.io/part-of: schulcloud-verbund
        app.kubernetes.io/version: "{{ REDIS_IMAGE_TAG }}"
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: database
        app.kubernetes.io/managed-by: ansible
        git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
        git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
    spec:
      securityContext:
        #readOnlyRootFilesystem: true
        #runAsNonRoot: true
      containers:
      - name: redis
        image: {{ REDIS_IMAGE_NAME }}:{{ REDIS_IMAGE_TAG }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        volumeMounts:
        - name: redis-data-pv
          mountPath: /data
          readOnly: false
        resources:
          limits:
            cpu: {{ REDIS_CPU_LIMITS|default("2000m", true) }}
            memory: {{ REDIS_MEMORY_LIMITS|default("128Mi", true) }}
          requests:
            cpu: {{ REDIS_CPU_REQUESTS|default("100m", true) }}
            memory: {{ REDIS_MEMORY_REQUESTS|default("128Mi", true) }}
      volumes:
      - name: redis-data-pv
        persistentVolumeClaim:
          claimName: redis-pvc
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                  - schulcloud-verbund
              topologyKey: "kubernetes.io/hostname"
              namespaceSelector: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - redis
              topologyKey: "cloud.ionos.com/nodepool-name"
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - redis
              topologyKey: "topology.kubernetes.io/zone"
