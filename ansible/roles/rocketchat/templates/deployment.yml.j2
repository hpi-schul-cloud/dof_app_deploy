apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocketchat-deployment
  #namespace: {{ NAMESPACE }}
  labels:
    app: rocketchat
    app.kubernetes.io/part-of: schulcloud-verbund
    app.kubernetes.io/version: "{{ ROCKETCHAT_IMAGE_TAG }}"
    app.kubernetes.io/name: rocketchat
    app.kubernetes.io/component: chat
    app.kubernetes.io/managed-by: ansible
    git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
    git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
spec:
  replicas: {{ ROCKET_CHAT_REPLICAS|default(1, true) }}
  selector:
    matchLabels:
      app: rocketchat
  template:
    metadata:
      labels:
        app: rocketchat
        app.kubernetes.io/part-of: schulcloud-verbund
        app.kubernetes.io/version: "{{ ROCKETCHAT_IMAGE_TAG }}"
        app.kubernetes.io/name: rocketchat
        app.kubernetes.io/component: chat
        app.kubernetes.io/managed-by: ansible
        git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
        git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
    spec:
      securityContext:
        runAsUser: 99999
        runAsGroup: 99999
        fsGroup: 99999
        runAsNonRoot: true
      containers:
      - name: rocketchat
        image: {{ ROCKETCHAT_IMAGE_NAME }}:{{ ROCKETCHAT_IMAGE_TAG }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: rocketchat
          containerPort: 5000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: rocketchat-configmap
        - secretRef:
            name: rocketchat-secret
        volumeMounts:
        - name: rocketchat-uploads-data
          mountPath: /app/uploads
          readOnly: false
        resources:
          limits:
            cpu: {{ ROCKETCHAT_CPU_LIMITS|default("4000m", true) }}
            memory: {{ ROCKETCHAT_MEMORY_LIMITS|default("4Gi", true) }}
          requests:
            cpu: {{ ROCKETCHAT_CPU_REQUESTS|default("100m", true) }}
            memory: {{ ROCKETCHAT_MEMORY_REQUESTS|default("256Mi", true) }}
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
      volumes:
      - name: rocketchat-uploads-data
        emptyDir: {}
{% if AFFINITY_ENABLE is defined and AFFINITY_ENABLE|bool %}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 9
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                  - schulcloud-verbund
              topologyKey: "kubernetes.io/hostname"
              namespaceSelector: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
{% if ANIT_AFFINITY_NODEPOOL_ENABLE is defined and ANIT_AFFINITY_NODEPOOL_ENABLE|bool %}
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - rocketchat
              topologyKey: {{ ANIT_AFFINITY_NODEPOOL_TOPOLOGY_KEY }}
{% endif %}
          - weight: 20
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - rocketchat
              topologyKey: "topology.kubernetes.io/zone"
{% endif %}
