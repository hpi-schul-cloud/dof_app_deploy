apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra-deployment
  namespace: {{ NAMESPACE }}
  labels:
    app: hydra
    app.kubernetes.io/part-of: schulcloud-verbund
    app.kubernetes.io/version: "{{ HYDRA_IMAGE_TAG }}"
    app.kubernetes.io/name: hydra
    app.kubernetes.io/component: oauth
    app.kubernetes.io/managed-by: ansible
    git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
    git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
spec:
  replicas: {{ HYDRA_REPLICAS|default(1, true) }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: hydra
  template:
    metadata:
      labels:
        app: hydra
        app.kubernetes.io/part-of: schulcloud-verbund
        app.kubernetes.io/version: "{{ HYDRA_IMAGE_TAG }}"
        app.kubernetes.io/name: hydra
        app.kubernetes.io/component: oauth
        app.kubernetes.io/managed-by: ansible
        git.branch: {{ DOF_APP_DEPLOY_BRANCH_NAME }}
        git.repo: {{ DOF_APP_DEPLOY_REPO_NAME }}
    spec:
      containers:
      - name: hydra
        image: {{ HYDRA_IMAGE_NAME }}:{{ HYDRA_IMAGE_TAG }}
        imagePullPolicy: Always
        args: ["serve", "all"]
        ports:
        - containerPort: 4444
        - containerPort: 4445
        livenessProbe:
          httpGet:
            path: /health/alive
            port: 4445
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4445
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
        envFrom:
        - configMapRef:
            name: hydra-configmap
        - secretRef:
            name: hydra-secret
        resources:
          limits:
            cpu: "{{ HYDRA_CPU_MAX|default("1000m", true) }}"
            memory: "{{ HYDRA_MEM_MAX|default("1Gi", true) }}"
          requests:
            cpu: "{{ HYDRA_CPU_MIN|default("100m", true) }}"
            memory: "{{ HYDRA_MEM_MIN|default("128Mi", true) }}"
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 9
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                  - schulcloud-verbund
              topologyKey: "kubernetes.io/hostname"
              namespaceSelector: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
{% if ANIT_AFFINITY_NODEPOOL_ENABLE is defined and ANIT_AFFINITY_NODEPOOL_ENABLE|bool %}
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - hydra
              topologyKey: {{ ANIT_AFFINITY_NODEPOOL_TOPOLOGY_KEY }}
{% endif %}
          - weight: 20
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - hydra
              topologyKey: "topology.kubernetes.io/zone"
