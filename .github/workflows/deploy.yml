---
name: Build and push Docker Image

on:
  repository_dispatch:
    types: [dev-deploy]

jobs:
  create_artifacts_repos:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        repos: [ dof_test_app_1, dof_test_app_2 ]
    steps:
      - uses: actions/checkout@v2
        with:
          repository: hpi-schul-cloud/${{ matrix.repos }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: ${{ matrix.repos }}
          fetch-depth: 0
      - run: git checkout ${{ github.event.client_payload.branch }}
        working-directory: ${{github.workspace }}/${{ matrix.repos }}
        continue-on-error: true
      - name: 
        working-directory: ${{github.workspace }}/${{ matrix.repos }}
        shell: bash
        run: |
          mkdir -p ansible/group_vars/all
          mkdir -p ansible/roles/${{ matrix.repos }}
      - name: get sha from branch
        working-directory: ${{github.workspace }}/${{ matrix.repos }}/ansible/group_vars/all
        shell: bash
        run: |
          echo "##[set-output name=sha;]$(git rev-parse HEAD)"
        id: sha_head
      - working-directory: ${{github.workspace }}/${{ matrix.repos }}/ansible/group_vars/all
        shell: bash
        run: |
          echo "${{ steps.sha_head.outputs.sha }}" >> ${{ matrix.repos }}.yml
      - run: tar -cf ${{ matrix.repos }}.tar ansible
        working-directory: ${{github.workspace }}/${{ matrix.repos }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.repos }}
          path: ${{github.workspace }}/${{ matrix.repos }}/${{ matrix.repos }}.tar
          
  create_artifacts_workspaces:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        tennens: [ brb, nbc ]
    steps:
      - name: SHA Stuf
        shell: bash
        id: sha_head
        run: |
          mkdir -p ansible/group_vars/${{ matrix.tennens }}
          echo "##[set-output name=sha;]$(${{ github.event.client_payload.branch }} | sha1sum)"
      - shell: bash
        working-directory: ${{github.workspace }}/ansible/group_vars/${{ matrix.tennens }}
        run: |
          declare test='${{ steps.sha_head.outputs.sha }}'
          echo "NAMESPACE=${{ matrix.tennens }}-${test::8}" > cfg.yml
          echo "DOMAIN=${{ matrix.tennens }}-${test::8}.dof.dev.hpi-schul-cloud.org" >> cfg.yml
      - run: tar -cf ${{ matrix.tennens }}.tar ansible
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tennens }}
          path: ${{github.workspace }}/${{ matrix.tennens }}.tar
  
  deploy:
    needs: 
      - create_artifacts_repos
      - create_artifacts_workspaces
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: git checkout ${{ github.event.client_payload.branch }}
        continue-on-error: true
      - uses: actions/download-artifact@v2
      - run: mv */*.tar ./
      - run: find -name "*.tar" -exec tar -xf {} \;
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - shell: bash
        run: |
          pip3 install setuptools 
          pip3 install ansible
        
      - run: ansible-galaxy collection install community.kubernetes
      - run: ansible-playbook ./playbook.yml --list-task --list-hosts
        working-directory: ${{github.workspace }}/ansible
      - run: |
          mkdir .kube
          echo "${{ secrets.DEV_KUBE_CONFIG }}" > .kube/config
      - run: ansible-playbook ./playbook.yml
        working-directory: ${{github.workspace }}/ansible
      - run: |
          rm -rf .kube/config
        
      - name: Display structure of the folder files
        run: ls -R
