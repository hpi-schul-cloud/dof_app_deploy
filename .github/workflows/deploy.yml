---
name: Deploy Action

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      user_name:
         required: false
         default: hpi-schul-clud-bot
         type: string
      user_email:
         required: false
         default: bot@hpi-schul-cloud.de
         type: string
    secrets:
      token:
        required: true
      DEV_VAULT:
        required: true
      DEV_KUBE_CONFIG:
        required: true

env:
  tennens: "brb default nbc"

permissions:
  contents: read

jobs:

  create_branch_identifier:
    uses: .github/workflows/branch-to-namespace.yml
    with:
      branch: ${{ inputs.branch }}

  create_artifacts_repos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repos: ${{ fromJson(.github/workflows repos.json) }}
    steps:
      - run: |
          echo "git_ref_name=${{ inputs.branch }}" >> $GITHUB_ENV
          echo git_ref_name ${{ inputs.branch }}
      - uses: actions/checkout@v3
        with:
          repository: hpi-schul-cloud/${{ matrix.repos }}
          token: ${{ secrets.token }}
          path: ${{ matrix.repos }}
          fetch-depth: 0
      - working-directory: ${{github.workspace }}/${{ matrix.repos }}
        shell: bash
        run: |
          git checkout ${{ env.git_ref_name }} || true
          commit_id=$(git rev-parse HEAD)
          mkdir -pv ansible/group_vars/all
          ansible_varname=$(echo ${{ matrix.repos }} | tr [a-z] [A-Z] | tr - _ | tr \. _ | tr [:blank:] _ )
          filename=$(echo ${ansible_varname} | tr [A-Z] [a-z] )
          for i in ${{ env.tennens }}; do
            mkdir -pv ansible/host_vars/${i}_host
            echo "${ansible_varname}_IMAGE_TAG: $commit_id" >> ansible/host_vars/${i}_host/$filename.yml 
          done
      - run: tar -cf ${{ matrix.repos }}.tar ansible
        working-directory: ${{github.workspace }}/${{ matrix.repos }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.repos }}
          path: ${{github.workspace }}/${{ matrix.repos }}/${{ matrix.repos }}.tar
          
  create_artifacts_workspaces:
    runs-on: ubuntu-latest
    needs:
      - create_branch_identifier
    strategy:
      matrix:
        tennens: [ brb, default, nbc ]
    steps:
      - shell: bash
        run: |
          mkdir -pv ansible/host_vars/${{ matrix.tennens }}_host
      - shell: bash
        working-directory: ${{github.workspace }}/ansible/host_vars/${{ matrix.tennens }}_host
        run: |
          echo "NAMESPACE: ${{ matrix.tennens }}-${{ needs.create_branch_identifier.outputs.id_branch }}" > cfg_host.yml
          echo "DOMAIN: ${{ matrix.tennens }}-${{ needs.create_branch_identifier.outputs.id_branch }}.cd.dbildungscloud.dev" >> cfg_host.yml
      - run: tar -cf ${{ matrix.tennens }}.tar ansible
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.tennens }}
          path: ${{github.workspace }}/${{ matrix.tennens }}.tar


  bingo_add_branch:
    needs:
      - create_branch_identifier
    uses: hpi-schul-cloud/dof_bingo/.github/workflows/add-branch.yml@main
    with:
      branch: ${{ needs.create_branch_identifier.outputs.id_branch }}
    secrets:
      bingo_token: ${{ secrets.BINGO_TOKEN }}

  deploy:
    needs: 
      - create_artifacts_repos
      - create_artifacts_workspaces
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - run: mv */*.tar ./
      - run: find -name "*.tar" -exec tar -xf {} \;
      - run: tar -cf ansible.tar ansible
      - uses: actions/upload-artifact@v3
        with:
          name: ansible
          path: ${{github.workspace }}/ansible.tar
      - shell: bash
        run: |
          python3 -m pip install kubernetes
          
      - name: 1Password
        working-directory: ${{github.workspace }}/ansible/group_vars
        run: |
          echo "VAULT: ${{ secrets.DEV_VAULT }}" >> develop/dof_deploy.yml
          echo "ONEPASSWORD_OPERATOR_VAULT: ${{ secrets.DEV_VAULT }}" >> develop/dof_deploy.yml
          echo "TLS_ENABELD: \"true\"" >> develop/dof_deploy.yml
      - run: ansible-galaxy install -r ansible/collections/requirements.yml
      - working-directory: ${{github.workspace }}/ansible/roles/sys
        run: |
          mkdir files
          echo "${{ secrets.DEV_KUBE_CONFIG }}" > files/config
      - run: ansible-playbook ./playbook.yml --inventory-file hosts -e 'ansible_python_interpreter=/usr/bin/python3'
        working-directory: ${{github.workspace }}/ansible
      - working-directory: ${{github.workspace }}/ansible/roles/sys/files
        run: |
          rm -rf  /config
