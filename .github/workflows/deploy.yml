---
name: Deploy Action

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      user_name:
         required: false
         default: hpi-schul-clud-bot
         type: string
      user_email:
         required: false
         default: bot@hpi-schul-cloud.de
         type: string
    secrets:
      token:
        required: true
      DEV_VAULT_BRB:
        required: true
      DEV_VAULT_THR:
        required: true
      DEV_VAULT_NBC:
        required: true
      DEV_VAULT_DBC:
        required: true
      DEV_KUBE_CONFIG_BRB:
        required: true
      DEV_KUBE_CONFIG_NBC:
        required: true
      DEV_KUBE_CONFIG_THR:
        required: true
      DEV_KUBE_CONFIG_DBC:
        required: true


env:
  tenants: "brb default nbc thr"

permissions:
  contents: read

jobs:

  create_branch_identifier:
    uses: hpi-schul-cloud/dof_app_deploy/.github/workflows/branch-to-namespace.yml@main
    with:
      branch: ${{ inputs.branch }}

  create_artifacts_repos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repos:
         - schulcloud-server
         - schulcloud-client
         - nuxt-client
         - superhero-dashboard
         - schulcloud-calendar
         - antivirus_check_service
         - version-aggregator
         - dof_app_deploy
         - h5p-staticfiles-server
         - tldraw-client
    steps:
      - run: |
          echo "git_ref_name=${{ inputs.branch }}" >> $GITHUB_ENV
          echo git_ref_name ${{ inputs.branch }}
      - uses: actions/checkout@v3
        with:
          repository: hpi-schul-cloud/${{ matrix.repos }}
          token: ${{ secrets.token }}
          path: ${{ matrix.repos }}
          fetch-depth: 0
      - working-directory: ${{github.workspace }}/${{ matrix.repos }}
        shell: bash
        run: |
          git checkout ${{ env.git_ref_name }} || true
          commit_id=$(git rev-parse HEAD)
          mkdir -pv ansible/group_vars/all
          ansible_varname=$(echo ${{ matrix.repos }} | tr [a-z] [A-Z] | tr - _ | tr \. _ | tr [:blank:] _ )
          filename=$(echo ${ansible_varname} | tr [A-Z] [a-z] )
          reponame=$(echo ${filename} | tr _ - )
          branch_varname=$(echo ${{ inputs.branch }} | tr -d [:cntrl:]  | tr / \. | tr [:blank:] _ )
          for i in ${{ env.tenants }}; do
            mkdir -pv ansible/host_vars/${i}_host
            echo "${ansible_varname}_IMAGE_TAG: $commit_id" >> ansible/host_vars/${i}_host/$filename.yml
            echo "${ansible_varname}_BRANCH_NAME: ${branch_varname}" >> ansible/host_vars/${i}_host/$filename.yml
            echo "${ansible_varname}_REPO_NAME: ${reponame}" >> ansible/host_vars/${i}_host/$filename.yml
          done
      - run: tar -cf ${{ matrix.repos }}.tar ansible
        working-directory: ${{github.workspace }}/${{ matrix.repos }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.repos }}
          path: ${{github.workspace }}/${{ matrix.repos }}/${{ matrix.repos }}.tar

  create_artifacts_workspaces:
    runs-on: ubuntu-latest
    needs:
      - create_branch_identifier
    strategy:
      matrix:
        tenants: [ brb, default, nbc, thr ]
    steps:
      - shell: bash
        run: |
          mkdir -pv ansible/host_vars/${{ matrix.tenants }}_host
      - shell: bash
        working-directory: ${{github.workspace }}/ansible/host_vars/${{ matrix.tenants }}_host
        run: |
          echo "NAMESPACE: ${{ needs.create_branch_identifier.outputs.id_branch }}" > cfg_host.yml
          echo "DOMAIN: ${{ needs.create_branch_identifier.outputs.id_branch }}.{{ matrix.tenants }}.dbildungscloud.dev" >> cfg_host.yml
      - run: tar -cf ${{ matrix.tenants }}.tar ansible
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.tenants }}
          path: ${{github.workspace }}/${{ matrix.tenants }}.tar


  deploy_dbc_dev:
    needs:
      - create_artifacts_repos
      - create_artifacts_workspaces
    uses: hpi-schul-cloud/dof_app_deploy/.github/workflows/deploy_dev.yml@main
    with:
      host_name: default_host
      tenannt: dbc
    secrets:
      ONEPASSWORD_VAULT: ${{ secrets.DEV_VAULT_DBC }}
      KUBECONFIG: ${{ secrets.DEV_KUBE_CONFIG_DBC }}

  deploy_nbc_dev:
    needs:
      - create_artifacts_repos
      - create_artifacts_workspaces
    uses: hpi-schul-cloud/dof_app_deploy/.github/workflows/deploy_dev.yml@main
    with:
      host_name: nbc_host
      tenannt: nbc
    secrets:
      ONEPASSWORD_VAULT: ${{ secrets.DEV_VAULT_NBC }}
      KUBECONFIG: ${{ secrets.DEV_KUBE_CONFIG_NBC }}

  deploy_brb_dev:
    needs:
      - create_artifacts_repos
      - create_artifacts_workspaces
    uses: hpi-schul-cloud/dof_app_deploy/.github/workflows/deploy_dev.yml@main
    with:
      host_name: brb_host
      tenannt: brb
    secrets:
      ONEPASSWORD_VAULT: ${{ secrets.DEV_VAULT_BRB }}
      KUBECONFIG: ${{ secrets.DEV_KUBE_CONFIG_BRB }}
