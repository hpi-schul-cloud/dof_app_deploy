---
name: deploy dev 

on:
  workflow_call:
    inputs:
      host_name:
         required: true
         type: string
      tenant:
         required: true
         type: string  
    secrets:
      ONEPASSWORD_VAULT:
        required: true
      KUBECONFIG:
        required: true

permissions:
  contents: read

jobs:
  create-artifact:
    runs-on: ubuntu-latest
    name: Ansible artifact ${{ inputs.tenant }}
    steps:
      - uses: actions/download-artifact@v4
      - run: ls -R
      - run: mv */*.tar ./
      - run: find -name "*.tar" -exec tar -xf {} \;
      - run: tar -cf ${{ inputs.tenant }}-ansible.tar ansible
      - uses: actions/upload-artifact@v4
        with:
          name: debug-${{ inputs.tenant }}-ansible
          path: ${{github.workspace }}/${{ inputs.tenant }}-ansible.tar
          overwrite: true


  deploy-matrix:
    runs-on: ubuntu-24.04
    # The `label` field is duplicated to support clean job names.
    # GitHub does not support conditional expressions (like `||`) in `name:`,
    # so all matrix entries must define the field explicitly.
    name: ${{ inputs.tenant }} â€¢ ${{ matrix.action.label }}
    strategy:
      fail-fast: false
      matrix:
        action:
          - tags: configmap
            label: configmap
            op: tags
          - tags: service
            label: service
            op: tags
          - tags: 1password
            label: 1password
            op: tags
          - tags: deployment
            label: deployment
            op: tags
          - tags: ingress
            label: ingress
            op: tags
          - tags: keda
            label: keda
            op: tags
          - tags: helm
            label: helm
            op: tags
          - tags: "ingress,configmap,service,1password,deployment,keda,helm"
            label: other-tags
            op: skip-tags
    steps:
      - uses: actions/download-artifact@v4
      - run: ls -R
      - run: mv */*.tar ./
      - run: find -name "*.tar" -exec tar -xf {} \;
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install python3-kubernetes
        uses: awalsh128/cache-apt-pkgs-action@5902b33ae29014e6ca012c5d8025d4346556bd40
        with:
          packages: python3-kubernetes
          version: 1.0

      - name: Cache Ansible Galaxy collections
        uses: actions/cache@v4
        with:
          path: ~/.ansible/collections
          key: ansible-collections-${{ hashFiles('ansible/collections/requirements.yml') }}

      - run: ansible-galaxy install -r ansible/collections/requirements.yml

      - name: 1Password
        working-directory: ${{github.workspace }}/ansible/group_vars
        run: |
          echo "VAULT: ${{ secrets.ONEPASSWORD_VAULT }}" >> develop/dof_deploy.yml
          echo "ONEPASSWORD_OPERATOR_VAULT: ${{ secrets.ONEPASSWORD_VAULT }}" >> develop/dof_deploy.yml
          echo "TLS_ENABLED: \"true\"" >> develop/dof_deploy.yml
      - working-directory: ${{github.workspace }}/ansible/roles/sys
        run: |
          mkdir files
          echo "${{ secrets.KUBECONFIG }}" > files/config
      - name: Set proxy environment variable if included in the kubeconfig
        working-directory: ${{github.workspace }}/ansible/roles/sys/files
        run: |
          yq ".clusters[0].cluster.proxy-url" config | sed -nr 's+(.*//).*@(.*)+K8S_AUTH_PROXY=\1\2+p' >> $GITHUB_ENV
          yq ".clusters[0].cluster.proxy-url" config | sed -nr 's+.*//(.*)@.*+K8S_AUTH_PROXY_HEADERS_PROXY_BASIC_AUTH=\1+p' >> $GITHUB_ENV
      - run: ansible-playbook ./playbook.yml --inventory-file hosts --limit "${{ inputs.host_name }}" -e 'ansible_python_interpreter=/usr/bin/python3' --${{ matrix.action.op }} ${{ matrix.action.tags }}
        working-directory: ${{github.workspace }}/ansible
      - working-directory: ${{github.workspace }}/ansible/roles/sys/files
        run: |
          rm -rf  /config
